{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saksh\\\\Documents\\\\React Udemy Course\\\\Index-1_Expense Tracker_Section 3\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport ExpenseFilter from './ExpenseFilter';\nimport './Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  }; //Filtered Expense is an array which consists of those items whose filtered year(selected on website) \n  //matches with year of items present in code.\n\n\n  const filteredExpense = props.items.filter(arrayElement => {\n    return arrayElement.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: 'white'\n    },\n    children: \"No Expenses Found!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 26\n  }, this);\n\n  if (filteredExpense > 0) {\n    expenseContent = filteredExpense.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      date: expense.date,\n      title: expense.title,\n      amount: expense.amount\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 59\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: filteredYear,\n      onFilterChange: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), expenseContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/saksh/Documents/React Udemy Course/Index-1_Expense Tracker_Section 3/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","ExpenseFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpense","items","filter","arrayElement","date","getFullYear","toString","expenseContent","color","map","expense","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMO,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD,GAFD,CAJwB,CAQxB;AACA;;;AACA,QAAMC,eAAe,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAqBC,YAAD,IAAkB;AAC3D,WAAOA,YAAY,CAACC,IAAb,CAAkBC,WAAlB,GAAgCC,QAAhC,OAA+CV,YAAtD;AACF,GAFuB,CAAxB;;AAIA,MAAIW,cAAc,gBAAG;AAAG,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AACA,MAAGR,eAAe,GAAG,CAArB,EAAuB;AACpBO,IAAAA,cAAc,GAAGP,eAAe,CAACS,GAAhB,CAAqBC,OAAD,iBAAc,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,OAAO,CAACN,IAA3B;AAED,MAAA,KAAK,EAAEM,OAAO,CAACC,KAFd;AAGD,MAAA,MAAM,EAAED,OAAO,CAACE;AAHf,OACIF,OAAO,CAACG,EADZ;AAAA;AAAA;AAAA;AAAA,YAAlC,CAAjB;AAKF;;AAED,sBACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BAEI,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEjB,YAAzB;AAAuC,MAAA,cAAc,EAAEE;AAAvD;AAAA;AAAA;AAAA;AAAA,YAFJ,EAmBKS,cAnBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAwBH,CA/CD;;GAAMb,Q;;KAAAA,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n      setFilteredYear(selectedYear);\r\n    };\r\n\r\n    //Filtered Expense is an array which consists of those items whose filtered year(selected on website) \r\n    //matches with year of items present in code.\r\n    const filteredExpense = props.items.filter( (arrayElement) => {\r\n       return arrayElement.date.getFullYear().toString() === filteredYear; \r\n    });\r\n\r\n    let expenseContent = <p style={{color: 'white'}}>No Expenses Found!</p>;\r\n    if(filteredExpense > 0){\r\n       expenseContent = filteredExpense.map((expense) => (<ExpenseItem date={expense.date} \r\n                                                         key={expense.id}\r\n                                                         title={expense.title} \r\n                                                         amount={expense.amount} /> \r\n                                                         ))\r\n    }\r\n\r\n    return(\r\n    <div className=\"expenses\">\r\n\r\n        <ExpenseFilter selected={filteredYear} onFilterChange={filterChangeHandler} />\r\n        \r\n        {/* In js, below statement; if first statement before && is true; 2nd statement will be executed */}\r\n        {/* {filteredExpense.length === 0 && <p>No Expenses Found!</p>} */}\r\n\r\n        {/* Alternative to below statement: {filteredExpense.length === 0 ? (<p>No Expenses Found!</p>): */}\r\n        {/* {filteredExpense.length > 0 && \r\n         (filteredExpense.map((expense) => (<ExpenseItem date={expense.date} \r\n                                                         key={expense.id}\r\n                                                         title={expense.title} \r\n                                                         amount={expense.amount} /> \r\n                                                         )))\r\n\r\n        } */}\r\n        \r\n        {/* or */}\r\n\r\n        {expenseContent}\r\n\r\n     </div>\r\n    );\r\n};\r\n\r\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}
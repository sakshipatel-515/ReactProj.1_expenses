{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saksh\\\\Documents\\\\React Udemy Course\\\\Index-1_Expense Tracker_Section 3\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpenseItem.js\";\n//useState is a react hook and all the hooks start with 'use'. They must be called inside only \n//react component functions. They can't be called inside nested functions. \n//const[title, setTitle] = useState(props.title); => first argument is a pointer to managed\n//value ie the value stored in props.title & setTitle is a fn which will be called later to\n//change the title value.\n//useState hook always returns an array of exactly 2 elements : first element is the current state \n//value & second is the fn updating that.\n//setTitle method: updates the current state of title & also the component fn gets re-executed\n//that is the component fn get called again. The method takes argument as \"changed value\".\nimport React from 'react';\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseItem = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["C:/Users/saksh/Documents/React Udemy Course/Index-1_Expense Tracker_Section 3/01-starting-setup/src/components/Expenses/ExpenseItem.js"],"names":["React","ExpenseDate","ExpenseItem","props","date","title","amount"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACG,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,KAAK,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACA;AAAA,kBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,wBAAuCF,KAAK,CAACG,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASH,CAXD;;KAAMJ,W;AAaN,eAAeA,WAAf","sourcesContent":["//useState is a react hook and all the hooks start with 'use'. They must be called inside only \r\n//react component functions. They can't be called inside nested functions. \r\n//const[title, setTitle] = useState(props.title); => first argument is a pointer to managed\r\n//value ie the value stored in props.title & setTitle is a fn which will be called later to\r\n//change the title value.\r\n//useState hook always returns an array of exactly 2 elements : first element is the current state \r\n//value & second is the fn updating that.\r\n//setTitle method: updates the current state of title & also the component fn gets re-executed\r\n//that is the component fn get called again. The method takes argument as \"changed value\".\r\nimport React from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\nconst ExpenseItem = (props) => {\r\n    \r\n    return(\r\n      <div className=\"expense-item\">\r\n         <ExpenseDate date={props.date} />\r\n         <div className=\"expense-item__description\">\r\n         <h2>{props.title}</h2>\r\n         <div className=\"expense-item__price\">${props.amount}</div>\r\n         </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;"]},"metadata":{},"sourceType":"module"}